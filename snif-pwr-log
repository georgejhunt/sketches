#!/bin/sh 
# Copyright (C) 2011 One Laptop per Child
# Power logging script
# Released under GPLv3

VERSION="0.1"
HOST=`hostname -s`
SITE="greenwave"

# The delay between readings.
DELAY=120
#DELAY=10
FAST_SAMPLE_V=5200000

# Make sure we have a correct system date.  As of now
# Jan 1 2012 is in the past so use that as a marker.
if [[ `date +%s` -lt 1325376000 ]]; then
	echo "`date` is in the past."
	echo "Fix your system date please"
	exit 1
fi

FDATE=`date "+%y%m%d-%H%M%S"`


KERNVER=`uname -r | cut -c 1-6 | sed 's/[\._-]//g'`

LOGFILE="/root/$SITE/sniffr/pwr-$FDATE-$SITE.csv"
mkdir -p "/root/$SITE/sniffr"


echo "Starting log $LOGFILE"
echo

echo "pwr_log Ver: $VERSION" > $LOGFILE
echo -n "HOST: "	>> $LOGFILE 
echo $HOST  		>> $LOGFILE 
echo -n "DATE: " 	>> $LOGFILE 
echo `date -R` 		>> $LOGFILE
echo -n "KERNEL: " 	>> $LOGFILE 
echo `uname -a`         >> $LOGFILE
# Allow the addition of some descriptive text from the cmd line
echo -n "COMMENT: " >> $LOGFILE
echo $1 >> $LOGFILE
echo "<StartData>" >> $LOGFILE

function reminder(){ # can request capacity from the arduino
CAPACITY=capacity
if [ ! -f $B_INFO/$CAPACITY ]
then
	CAPACITY=capacity_level
fi
}

function get_acr {

    local acr_temp

    acr_temp=$(< $B_INFO/$ACR_PROP )
    test $KERNAPI -eq 1 && acr_temp=$(conv_2s_comp ${acr_temp:-0})
    echo ${acr_temp:-0}
}

function get_seconds {
        echo `date +%s`
}

function take_reading {
        DEV=/dev/ttyACM0
	 (stty -F $DEV ispeed 9600 ospeed 9600 -ignpar cs8; echo "r";sleep 2;read ans;echo $ans>line)<$DEV>$DEV
	ans=`cat line`
	echo $ans
	CAPLEVEL=`echo $ans|cut -d "," -s -f 1`
	VOLT=`echo $ans|cut -d "," -s -f 2`
	CURR=`echo $ans|cut -d "," -s -f 3`
	TEMP=`echo $ans|cut -d "," -s -f 4`
	STAT=`echo $ans|cut -d "," -s -f 5`
	ACR=`echo $ans|cut -d "," -s -f 6`
	MAh=`echo $ans|cut -d "," -s -f 7`
	THIS_SEC=$(get_seconds)
	NET_MINUTES=$(( ( ${THIS_SEC} - ${START_TIME} ) / 60 ))	
	echo `date +%s`",$CAPLEVEL,$VOLT,$CURR,$TEMP,$ACR,$STAT,$MAh,$NET_MINUTES" | tee -a $LOGFILE
	sync
}

START_TIME=$(get_seconds)

while true
do
   take_reading
   sleep $DELAY
done
